// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @default(cuid())
  userName  String   @unique
  name      String?
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  posts     Post[]
  likes     Like[]
  comments  Comment[]
}

model Post {
  postId     String   @id @default(cuid())
  title      String   @unique
  description String
  userId     String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  likes      Like[]
  comments   Comment[]
}

model Like {
  likeId        String   @id @default(cuid())
  postId        String
  userId        String
  likeCreatedAt DateTime @default(now())

  post          Post     @relation(fields: [postId], references: [postId], onDelete: Cascade)
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Comment {
  commentId        String   @id @default(cuid())
  postId           String
  userId           String
  comment          String
  commentCreatedAt DateTime @default(now())

  post             Post     @relation(fields: [postId], references: [postId], onDelete: Cascade)
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
